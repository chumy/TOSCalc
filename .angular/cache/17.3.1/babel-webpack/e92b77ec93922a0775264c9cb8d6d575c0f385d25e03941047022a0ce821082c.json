{"ast":null,"code":"import { Entrenador } from \"../models/entrenador\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EntrenadoresService = /*#__PURE__*/(() => {\n  class EntrenadoresService {\n    constructor(http) {\n      this.http = http;\n      this.getEntrenadores().subscribe(data => {\n        this.entrenadores = data;\n      });\n    }\n    getEntrenadores() {\n      return this.http.get(\"./assets/data/coaches_data.csv\", {\n        responseType: \"text\"\n      }).pipe(map(data => {\n        return this.CSV2JSON(data);\n      }));\n    }\n    CSVToArray(strData, strDelimiter) {\n      strDelimiter = strDelimiter || \",\";\n      var objPattern = new RegExp(\n      // Delimiters.\n      \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n      // Quoted fields.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n      // Standard fields.\n      '([^\"\\\\' + strDelimiter + \"\\\\r\\\\n]*))\", \"gi\");\n      var arrData = [[]];\n      var arrMatches = null;\n      while (arrMatches = objPattern.exec(strData)) {\n        var strMatchedDelimiter = arrMatches[1];\n        if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n          arrData.push([]);\n        }\n        if (arrMatches[2]) {\n          var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', \"g\"), '\"');\n        } else {\n          var strMatchedValue = arrMatches[3];\n        }\n        arrData[arrData.length - 1].push(strMatchedValue);\n      }\n      return arrData;\n    }\n    CSV2JSON(csv) {\n      var array = this.CSVToArray(csv, \",\");\n      var objArray = [];\n      for (var i = 1; i < array.length; i++) {\n        let entrenador = new Entrenador();\n        for (var k = 0; k < array[0].length && k < array[i].length; k++) {\n          var key = array[0][k];\n          entrenador[key] = array[i][k];\n        }\n        objArray.push(entrenador);\n      }\n      return objArray;\n    }\n    getEntrenador(id) {\n      let entrenador = this.entrenadores.filter(data => {\n        //console.log(data);\n        return data[\"id\"] == id;\n      });\n      return entrenador[0];\n    }\n    static #_ = this.ɵfac = function EntrenadoresService_Factory(t) {\n      return new (t || EntrenadoresService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EntrenadoresService,\n      factory: EntrenadoresService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n  return EntrenadoresService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}