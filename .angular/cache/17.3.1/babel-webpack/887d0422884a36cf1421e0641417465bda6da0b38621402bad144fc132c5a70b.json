{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport { Empleado } from \"../models/empleado\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EmpleadosService = /*#__PURE__*/(() => {\n  class EmpleadosService {\n    constructor(http) {\n      this.http = http;\n      this.getEmpleados().subscribe(data => {\n        this.empleados = data;\n      });\n    }\n    getEmpleados() {\n      return this.http.get(\"./assets/data/empleados_data.csv\", {\n        responseType: \"text\"\n      }).pipe(map(data => {\n        return this.CSV2JSON(data);\n      }));\n    }\n    CSVToArray(strData, strDelimiter) {\n      strDelimiter = strDelimiter || \",\";\n      var objPattern = new RegExp(\n      // Delimiters.\n      \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n      // Quoted fields.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n      // Standard fields.\n      '([^\"\\\\' + strDelimiter + \"\\\\r\\\\n]*))\", \"gi\");\n      var arrData = [[]];\n      var arrMatches = null;\n      while (arrMatches = objPattern.exec(strData)) {\n        var strMatchedDelimiter = arrMatches[1];\n        if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n          arrData.push([]);\n        }\n        if (arrMatches[2]) {\n          var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', \"g\"), '\"');\n        } else {\n          var strMatchedValue = arrMatches[3];\n        }\n        arrData[arrData.length - 1].push(strMatchedValue);\n      }\n      return arrData;\n    }\n    CSV2JSON(csv) {\n      var array = this.CSVToArray(csv, \",\");\n      var objArray = [];\n      for (var i = 1; i < array.length; i++) {\n        let empleado = new Empleado();\n        for (var k = 0; k < array[0].length && k < array[i].length; k++) {\n          var key = array[0][k];\n          empleado[key] = array[i][k];\n        }\n        objArray.push(empleado);\n        // console.log(empleado);\n      }\n      return objArray;\n    }\n    getEmpleado(id) {\n      let empleado = this.empleados.filter(data => {\n        return data[\"id\"] == id;\n      });\n      return empleado[0];\n    }\n    static #_ = this.ɵfac = function EmpleadosService_Factory(t) {\n      return new (t || EmpleadosService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmpleadosService,\n      factory: EmpleadosService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return EmpleadosService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}