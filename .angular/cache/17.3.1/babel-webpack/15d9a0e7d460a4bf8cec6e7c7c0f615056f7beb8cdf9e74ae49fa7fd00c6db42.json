{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport { Jugador } from \"../models/jugador\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let JugadoresService = /*#__PURE__*/(() => {\n  class JugadoresService {\n    constructor(http) {\n      this.http = http;\n      this.ficheros = ['TOS', 'Campeones'];\n      /* this.getJugadores('TOS').subscribe(data => {\n          this.jugadores = data;\n        });*/\n    }\n    loadJugadores(file) {\n      //console.log(\"Recibido\" + file)\n      return this.http.get(\"./assets/data/player_data_\" + file + \".csv\", {\n        responseType: \"text\"\n      }).pipe(map(data => {\n        return this.CSV2JSON(data);\n      }));\n    }\n    CSVToArray(strData, strDelimiter) {\n      strDelimiter = strDelimiter || \",\";\n      var objPattern = new RegExp(\n      // Delimiters.\n      \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n      // Quoted fields.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n      // Standard fields.\n      '([^\"\\\\' + strDelimiter + \"\\\\r\\\\n]*))\", \"gi\");\n      var arrData = [[]];\n      var arrMatches = null;\n      while (arrMatches = objPattern.exec(strData)) {\n        var strMatchedDelimiter = arrMatches[1];\n        if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n          arrData.push([]);\n        }\n        if (arrMatches[2]) {\n          var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', \"g\"), '\"');\n        } else {\n          var strMatchedValue = arrMatches[3];\n        }\n        arrData[arrData.length - 1].push(strMatchedValue);\n      }\n      return arrData;\n    }\n    CSV2JSON(csv) {\n      var array = this.CSVToArray(csv, \",\");\n      var objArray = [];\n      let jugador2;\n      let variable = \"nombre\";\n      //jugador2.put(variable, \"2\");\n      for (var i = 1; i < array.length; i++) {\n        //objArray[i - 1] = {};\n        let jugador = new Jugador();\n        for (var k = 0; k < array[0].length && k < array[i].length; k++) {\n          var key = array[0][k];\n          //objArray[i - 1][key] = array[i][k];\n          jugador[key] = array[i][k];\n        }\n        objArray.push(jugador);\n      }\n      //var json = JSON.stringify(objArray);\n      //var str = json.replace(/},/g, \"},\\r\\n\");\n      return objArray;\n    }\n    getJugadoresPosicion(posicion) {\n      return this.jugadores.filter(data => {\n        return data[posicion] == 1;\n      });\n    }\n    setNewFile(file) {\n      this.loadJugadores(file).subscribe(data => {\n        this.jugadores = data;\n        //console.log(data);\n      });\n    }\n    getJugadorById(id) {\n      let jugadorSel = new Jugador();\n      this.jugadores.filter(data => {\n        if (data['id'] == id) {\n          jugadorSel = data;\n        }\n      });\n      return jugadorSel;\n    }\n    static #_ = this.ɵfac = function JugadoresService_Factory(t) {\n      return new (t || JugadoresService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JugadoresService,\n      factory: JugadoresService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n  return JugadoresService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}